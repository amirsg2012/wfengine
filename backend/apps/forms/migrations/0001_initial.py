# Generated by Django 5.2.6 on 2025-10-01 21:04

import django.db.models.deletion
import django_mongodb_backend.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workflows', '0002_add_form_to_steps'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicForm',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(help_text="Unique form identifier (e.g., 'applicant_info', 'property_details')", max_length=100, unique=True)),
                ('name', models.CharField(help_text='Form name in English', max_length=255)),
                ('name_fa', models.CharField(help_text='Form name in Persian', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('form_number', models.IntegerField(blank=True, help_text='Legacy form number (1, 2, 3, etc.)', null=True)),
                ('version', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_forms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dynamic Form',
                'verbose_name_plural': 'Dynamic Forms',
                'ordering': ['form_number', 'code'],
            },
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(help_text="Unique field identifier (e.g., 'first_name', 'national_code')", max_length=100, unique=True)),
                ('name', models.CharField(help_text='Field name in English', max_length=255)),
                ('name_fa', models.CharField(help_text='Field name in Persian', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Field description')),
                ('field_type', models.CharField(choices=[('TEXT', 'Text'), ('TEXTAREA', 'Text Area'), ('NUMBER', 'Number'), ('EMAIL', 'Email'), ('PHONE', 'Phone'), ('DATE', 'Date'), ('DATETIME', 'Date Time'), ('SELECT', 'Select (Dropdown)'), ('MULTI_SELECT', 'Multi Select'), ('CHECKBOX', 'Checkbox'), ('RADIO', 'Radio Button'), ('FILE', 'File Upload'), ('IMAGE', 'Image Upload'), ('SIGNATURE', 'Signature'), ('COMPUTED', 'Computed Field'), ('SECTION', 'Section Header')], default='TEXT', max_length=20)),
                ('is_computed', models.BooleanField(default=False, help_text='Is this field computed from other fields?')),
                ('source_fields', models.JSONField(blank=True, default=list, help_text='List of field codes this field is computed from')),
                ('computation_rule', models.TextField(blank=True, help_text="JavaScript expression or template for computing value (e.g., '{first_name} {last_name}')")),
                ('is_required', models.BooleanField(default=False)),
                ('min_length', models.IntegerField(blank=True, null=True)),
                ('max_length', models.IntegerField(blank=True, null=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('pattern', models.CharField(blank=True, help_text='Regex pattern for validation', max_length=255)),
                ('validation_message', models.CharField(blank=True, help_text='Custom validation error message', max_length=255)),
                ('options', models.JSONField(blank=True, default=list, help_text='List of {value, label, label_fa} for select/radio fields')),
                ('placeholder', models.CharField(blank=True, max_length=255)),
                ('placeholder_fa', models.CharField(blank=True, max_length=255)),
                ('default_value', models.CharField(blank=True, max_length=255)),
                ('help_text', models.TextField(blank=True)),
                ('help_text_fa', models.TextField(blank=True)),
                ('display_order', models.IntegerField(default=0)),
                ('width', models.CharField(default='full', help_text='Field width: full, half, third, quarter', max_length=20)),
                ('data_path', models.CharField(blank=True, help_text="JSON path where field data is stored (e.g., 'personalInfo.firstName')", max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_fields', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Form Field',
                'verbose_name_plural': 'Form Fields',
                'ordering': ['display_order', 'code'],
            },
        ),
        migrations.CreateModel(
            name='FormSection',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('name_fa', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('is_collapsible', models.BooleanField(default=False)),
                ('is_collapsed_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='forms.dynamicform')),
            ],
            options={
                'verbose_name': 'Form Section',
                'verbose_name_plural': 'Form Sections',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FormFieldMapping',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0)),
                ('is_required', models.BooleanField(blank=True, help_text="Override field's default required setting", null=True)),
                ('is_readonly', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('default_value', models.CharField(blank=True, help_text="Override field's default value for this form", max_length=255)),
                ('show_if_field', models.CharField(blank=True, help_text='Field code that controls visibility', max_length=100)),
                ('show_if_value', models.CharField(blank=True, help_text='Value that triggers visibility', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='form_mappings', to='forms.formfield')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_mappings', to='forms.formsection')),
            ],
            options={
                'verbose_name': 'Form Field Mapping',
                'verbose_name_plural': 'Form Field Mappings',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FormData',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('data', models.JSONField(default=dict, help_text='Form field values as {field_code: value}')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('form_version', models.IntegerField()),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submissions', to='forms.dynamicform')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='form_submissions', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_submissions', to='workflows.workflow')),
            ],
            options={
                'verbose_name': 'Form Submission',
                'verbose_name_plural': 'Form Submissions',
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['workflow', 'form'], name='forms_formd_workflo_f72454_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='formfield',
            index=models.Index(fields=['code'], name='forms_formf_code_5b0cd9_idx'),
        ),
        migrations.AddIndex(
            model_name='formfield',
            index=models.Index(fields=['field_type'], name='forms_formf_field_t_001081_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='formsection',
            unique_together={('form', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='formfieldmapping',
            unique_together={('section', 'field')},
        ),
    ]
